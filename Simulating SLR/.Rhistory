#assume
#assume we simulate n=21 observations from the model Y=5-2x+e, where e is the error term or epsilon
num_obs=21
beta_0=5
beta_1=-2
sigma=3
#rememeber e is usually normally distributed, thus generating e randomly we have
set.seed(1)
epsilon=rnorm(n=num_obs,mean=0,sd=sigma)
#assuming that the following, NOT randomly generated values are xi
x_vars=seq(from=0,to=10, length.out = num_obs)
y_vars=beta_0+beta_1*x_vars+epsilon
#simulation thus will be
sim_fit=lm(y_vars~x_vars)
coef(sim_fit)
#in comparison of the simulated model and the real model we have the following graphical rep
first create a dataframe for the above
#first create a dataframe for the above
data.frame(predictor=x_vars, response=y_vars)
sim_slr=function(x,beta_0=10,beta_1=5,sigma=1){n=length(x) epsilon=rnorm(n,mean=0,sd=sigma) y=beta_0+beta_1*x+epsilon data.frame(predictor=x, response=y)}
sim_slr=function(x,beta_0=10,beta_1=5,sigma=1){n=length(x);epsilon=rnorm(n,mean=0,sd=sigma); y=beta_0+beta_1*x+epsilon; data.frame(predictor=x, response=y);}
set.seed(1)
sim_data=sim_slr(x=x_vars,beta_0=5,bata_1=2,sigma = 3)
sim_data=sim_slr(x=x_vars,beta_0=5,beta_1=2,sigma = 3)
head(sim_data)
#therefore graph p.s some steps above are repeated for efficiency
plot(response~predictor, data=sim_data,xlab="Simulated Predictor Variable", ylab="Simulated Response Variable", main="Simulated Regression Data", pch= 20, cex=2, col ="grey")
abline(sim_fit, lwd=3, lty=1, col= "darkorange")
abline(beta_0,beta_1,lwd=3,lty=2,col="dodgerblue")
legend("toprigt",c("Estimate", "Truth"), lty=c(1,2),lwd=2, col=c("darkorange","dodgerblue"))
legend("topright",c("Estimate", "Truth"), lty=c(1,2),lwd=2, col=c("darkorange","dodgerblue"))
